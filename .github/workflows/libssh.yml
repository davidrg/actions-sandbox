# Build Libssh (including all of its dependencies)

name: LibSSH

on:
  push:
    paths:
      - doc/**
      - .github/workflows/libssh.yml
  workflow_dispatch:

env:
  # Expected filename: https://zlib.net/zlib-${{env.ZLIB_VERSION}}.tar.gz
  ZLIB_VERSION: 1.2.12
  # Expected filename: https://www.openssl.org/source/openssl-${{env.OPENSSL_VERSION}}.tar.gz
  OPENSSL_VERSION: 1.1.1q
  # Exoected filename: ${{env.LIBSSH_SOURCE}}libssh-${{env.LIBSSH_VERSION}}.tar.xz
  LIBSSH_SOURCE: https://www.libssh.org/files/0.9/
  LIBSSH_VERSION: 0.9.6

jobs:
  Build-VisualCxx:
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - x86
        toolset:
          - 14.3

    steps:
      - uses: actions/checkout@v3

      - name: Enable Developer Command Prompt
        # You may pin to the exact commit or the version.
        # uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1
        uses: ilammy/msvc-dev-cmd@v1.10.0
        with:
          arch: ${{ matrix.arch }}
          toolset: ${{ matrix.toolset }}
          #sdk:   # use the latest
          #spectre: # set true to use VC libraries with sepctre mitigations
      - name: Get dependencies
        run: |
          # Get and unpack zlib
          mkdir zlib
          cd zlib
          wget https://zlib.net/zlib-${{env.ZLIB_VERSION}}.tar.gz -outfile zlib-${{env.ZLIB_VERSION}}.tar.gz
          7z x zlib-${{env.ZLIB_VERSION}}.tar.gz
          7z x zlib-${{env.ZLIB_VERSION}}.tar
          ren zlib-${{env.ZLIB_VERSION}} ${{env.ZLIB_VERSION}}
          cd ..
          
          # Get and unpack openssl
          mkdir openssl
          cd openssl
          wget https://www.openssl.org/source/openssl-${{env.OPENSSL_VERSION}}.tar.gz -outfile openssl-${{env.OPENSSL_VERSION}}.tar.gz
          7z x openssl-${{env.OPENSSL_VERSION}}.tar.gz
          7z x openssl-${{env.OPENSSL_VERSION}}.tar
          ren openssl-${{env.OPENSSL_VERSION}} ${{env.OPENSSL_VERSION}}
          cd ..
          
          # Get and unpack libssh
          mkdir libssh
          cd libssh
          wget ${{env.LIBSSH_SOURCE}}libssh-${{env.LIBSSH_VERSION}}.tar.xz -outfile libssh-${{env.LIBSSH_VERSION}}.tar.xz
          7z x libssh-${{env.LIBSSH_VERSION}}.tar.xz
          7z x libssh-${{env.LIBSSH_VERSION}}.tar
          ren libssh-${{env.LIBSSH_VERSION}}.tar.xz ${{env.LIBSSH_VERSION}}
          cd ${{env.LIBSSH_VERSION}}
          mkdir build
          cd ..
          cd ..
          
          # Get and unpack nasm
          mkdir tools
          cd tools
          wget https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/win32/nasm-2.15.05-win32.zip -outfile nasm-2.15.05-win32.zip
          7z x nasm-2.15.05-win32.zip
          ren nasm-2.15.05 nasm
          cd ..          
        shell: powershell          
      - name: Build zlib
        shell: cmd
        run: |
          cd zlib\${{env.ZLIB_VERSION}}
          cmake .
          nmake -f win32\Makefile.msc
      - name: Build openssl
        shell: cmd
        run: |
          cd openssl\${{env.OPENSSL_VERSION}}
          cpan -i Text::Template
          perl Configure VC-WIN32 zlib-dynamic --with-zlib-include=${{env.GITHUB_WORKSPACE}}\zlib\${{env.ZLIB_VERSION}}
          nmake
